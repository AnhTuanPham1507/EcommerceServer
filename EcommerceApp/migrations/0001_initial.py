# Generated by Django 3.2.8 on 2021-10-14 04:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('logo', models.ImageField(default=None, upload_to='static/image/brand')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('picture', models.ImageField(default=None, upload_to='static/image/category')),
            ],
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.category')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.CharField(blank=True, max_length=20, unique=True)),
                ('phone', models.CharField(blank=True, max_length=11, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('shipped_date', models.DateTimeField(auto_now_add=True)),
                ('address', models.CharField(max_length=255)),
                ('total_price', models.FloatField()),
                ('status', models.IntegerField(choices=[(1, 'Pending Order'), (2, 'delivering Order'), (3, 'Successful Order '), (4, 'failure Order')], default=1)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=255)),
                ('description', models.TextField(default='')),
                ('main_type', models.CharField(max_length=255)),
                ('sub_type', models.CharField(blank=True, default='', max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('total_sold_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.brand')),
                ('classification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.classification')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, default=None, upload_to='static/image/avatar')),
                ('role', models.CharField(choices=[('ADMIN', 'admin'), ('SELLER', 'seller'), ('CUSTOMER', 'customer')], default='CUSTOMER', max_length=8)),
                ('status', models.CharField(choices=[('PENDING', 'pending'), ('BANED', 'banned'), ('ACTIVE', 'active')], default='ACTIVE', max_length=7)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Accounts',
                'verbose_name_plural': 'Accounts',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identity', models.CharField(blank=True, max_length=20, unique=True)),
                ('phone', models.CharField(blank=True, max_length=11, unique=True)),
                ('wallet', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller_income', models.FloatField(default=0.0)),
                ('ecommerce_income', models.FloatField(default=0.0)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(blank=True, default=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.order')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_content', models.CharField(max_length=255)),
                ('sub_content', models.CharField(blank=True, default='', max_length=255)),
                ('price', models.BigIntegerField()),
                ('quantity', models.IntegerField()),
                ('sold_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('image', models.ImageField(blank=True, default=None, upload_to='static/image/product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.seller'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('momo_id', models.BigIntegerField(default='')),
                ('status', models.IntegerField(choices=[(1, 'Successful Payment '), (2, 'Refunded Payment')], default=1)),
                ('type', models.CharField(choices=[('IN_PERSON', 'pay in person'), ('MOMO', 'pay by momo wallet')], default='IN_PERSON', max_length=9)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.productdetail')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='seller',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.seller'),
        ),
        migrations.CreateModel(
            name='Evaluate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255)),
                ('rate', models.IntegerField(choices=[(5, 'rất hài lòng'), (4, 'hài lòng'), (3, 'bình thường'), (2, 'tệ'), (1, 'rất tệ')], default=3)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EcommerceApp.product')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
